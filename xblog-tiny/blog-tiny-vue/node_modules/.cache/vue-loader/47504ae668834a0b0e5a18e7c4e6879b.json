{"remainingRequest":"D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\src\\views\\PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\src\\views\\PostList.vue","mtime":1648607539357},{"path":"D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1620148001577},{"path":"D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\xblog-tiny\\blog-tiny-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1620148009005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgSGVhZGVyIGZyb20gIkAvY29tcG9uZW50cy9IZWFkZXIiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJQb3N0TGlzdCIsDQogIGNvbXBvbmVudHM6IHtIZWFkZXJ9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBwb3N0czoge30sDQogICAgICBjdXJyZW50UGFnZTogMSwNCiAgICAgIHRvdGFsOiAwLA0KICAgICAgcGFnZVNpemU6IDUNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKGN1cnJlbnRQYWdlKSB7DQogICAgICBjb25zdCBfdGhpcyA9IHRoaXMNCiAgICAgIF90aGlzLiRheGlvcy5nZXQoIi9wb3N0L2xpc3Q/Y3VycmVudFBhZ2U9IiArIGN1cnJlbnRQYWdlKS50aGVuKHJlcyA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKHJlcykNCiAgICAgICAgX3RoaXMucG9zdHMgPSByZXMuZGF0YS5kYXRhLnJlY29yZHMNCiAgICAgICAgX3RoaXMuY3VycmVudFBhZ2UgPSByZXMuZGF0YS5kYXRhLmN1cnJlbnQNCiAgICAgICAgX3RoaXMudG90YWwgPSByZXMuZGF0YS5kYXRhLnRvdGFsDQogICAgICAgIF90aGlzLnBhZ2VTaXplID0gcmVzLmRhdGEuZGF0YS5zaXplDQogICAgICB9KQ0KICAgIH0NCiAgfSwNCg0KICAvL+mhtemdouS4gOW8gOWni+a4suafk+aXtu+8jOiwg+eUqG1vdW50ZWQoKeaWueazle+8iOWbnuWGmeaTjeS9nO+8iQ0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuaGFuZGxlQ3VycmVudENoYW5nZSgxKQ0KICB9DQp9DQo="},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"PostList.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <Header></Header>\r\n    <div>\r\n      <div class=\"block\">\r\n        <!--时间线-->\r\n        <el-timeline>\r\n          <el-timeline-item :timestamp=\"post.created\" placement=\"top\" v-for=\"(post, index) in posts\" :key=\"index\">\r\n            <el-card>\r\n              <h4>\r\n                <!--使用router-link来跳转到某个组件，例如跳转到【BlogDetail组件】，需要传递参数【blogId: post.id】-->\r\n                <router-link :to=\"{name: 'PostDetail', params: {postId: post.id}}\">{{ post.title }}</router-link>\r\n              </h4>\r\n              <p>{{ post.description }}</p>\r\n            </el-card>\r\n          </el-timeline-item>\r\n        </el-timeline>\r\n        <!--分页-->\r\n        <el-pagination style=\"margin: 0 auto; text-align: center\" background layout=\"prev, pager, next\" :current-page=\"currentPage\" :page-size=\"pageSize\" :total=\"total\" @current-change=handleCurrentChange></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/Header\";\r\n\r\nexport default {\r\n  name: \"PostList\",\r\n  components: {Header},\r\n  data() {\r\n    return {\r\n      posts: {},\r\n      currentPage: 1,\r\n      total: 0,\r\n      pageSize: 5\r\n    }\r\n  },\r\n  methods: {\r\n    handleCurrentChange(currentPage) {\r\n      const _this = this\r\n      _this.$axios.get(\"/post/list?currentPage=\" + currentPage).then(res => {\r\n        console.log(res)\r\n        _this.posts = res.data.data.records\r\n        _this.currentPage = res.data.data.current\r\n        _this.total = res.data.data.total\r\n        _this.pageSize = res.data.data.size\r\n      })\r\n    }\r\n  },\r\n\r\n  //页面一开始渲染时，调用mounted()方法（回写操作）\r\n  mounted() {\r\n    this.handleCurrentChange(1)\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}