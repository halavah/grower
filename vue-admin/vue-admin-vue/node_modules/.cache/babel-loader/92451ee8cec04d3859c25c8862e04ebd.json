{"remainingRequest":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\sys\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\sys\\User.vue","mtime":1648607539315},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1620148001577},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1620148009005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 1.【Form 表单：行内表单】 -->\r\n    <el-form :inline=\"true\" :model=\"formInline\">\r\n      <el-form-item>\r\n        <el-input\r\n          v-model=\"formInline.name\"\r\n          placeholder=\"请输入昵称\"\r\n          clearable\r\n          size=\"mini\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"success\" size=\"mini\" @click=\"querySomeUser\">搜索</el-button>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"addOneUser\">新增一行</el-button>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-popconfirm title=\"确定批量删除吗？？\" @confirm=\"deleteSomeUser\">\r\n          <el-button slot=\"reference\" type=\"danger\" size=\"mini\" :disabled=\"deleteSomeStatus\"\r\n            >批量删除\r\n          </el-button>\r\n        </el-popconfirm>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 2.【Table 表格：多选】 -->\r\n    <el-table\r\n      ref=\"multipleTable\"\r\n      :data=\"tableUserData\"\r\n      tooltip-effect=\"dark\"\r\n      border\r\n      stripe\r\n      size=\"small\"\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n\r\n      <el-table-column label=\"头像\" width=\"50\">\r\n        <template v-slot=\"scope\">\r\n          <el-avatar size=\"small\" :src=\"scope.row.avatar\"></el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"username\" label=\"昵称\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"mobile\" label=\"手机\" width=\"120\"></el-table-column>\r\n\r\n      <el-table-column prop=\"role\" label=\"角色\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-tag v-for=\"(item, index) in scope.row.roles\" :key=\"index\" size=\"small\" type=\"info\"\r\n            >{{ item.name }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\r\n        <template v-slot=\"scope\">\r\n          <el-tag v-if=\"scope.row.status === 0\" size=\"small\" type=\"success\">正常</el-tag>\r\n          <el-tag v-else-if=\"scope.row.status === 1\" size=\"small\" type=\"danger\">禁用</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <template v-slot=\"scope\">\r\n          <el-button\r\n            type=\"warning\"\r\n            size=\"mini\"\r\n            @click=\"updatePassUser(scope.row.id, scope.row.username)\"\r\n            >重置密码\r\n          </el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"updateUserRole(scope.row.id)\"\r\n            >关联表（用户-角色）\r\n          </el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"updateOneUser(scope.row.id)\"\r\n            >编辑该行\r\n          </el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <span>\r\n            <el-popconfirm title=\"是否删除当前行内容？\" @confirm=\"deleteOneUser(scope.row.id)\">\r\n              <el-button slot=\"reference\" type=\"danger\" size=\"mini\">删除该行</el-button>\r\n            </el-popconfirm>\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 3.【Pagination 分页：完整功能】 -->\r\n    <el-pagination\r\n      style=\"margin-top: 10px\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :page-sizes=\"[10, 20, 50, 100]\"\r\n      :current-page=\"current\"\r\n      :page-size=\"size\"\r\n      :total=\"total\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 4.【Dialog 对话框：基本用法】- 表格数据（该行）-->\r\n    <el-dialog :title=\"dialogUserTitle\" :visible.sync=\"dialogUserVisible\" width=\"600px\">\r\n      <el-form ref=\"ruleUserForm\" :model=\"ruleUserForm\" :rules=\"ruleUser\" label-width=\"100px\">\r\n        <el-form-item label=\"昵称\" prop=\"username\" label-width=\"100px\">\r\n          <el-input v-model=\"ruleUserForm.username\" placeholder=\"请输入用户昵称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" label-width=\"100px\">\r\n          <el-alert title=\"初始密码为123456\" :closable=\"false\" style=\"line-height: 12px\"></el-alert>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\" label-width=\"100px\">\r\n          <el-input v-model=\"ruleUserForm.email\" placeholder=\"请输入用户邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" prop=\"mobile\" label-width=\"100px\">\r\n          <el-input v-model=\"ruleUserForm.mobile\" placeholder=\"请输入用户手机\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"状态\" prop=\"status\" label-width=\"100px\">\r\n          <el-radio-group v-model=\"ruleUserForm.status\">\r\n            <el-radio :label=\"0\">正常</el-radio>\r\n            <el-radio :label=\"1\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"submitUserForm('ruleUserForm')\"\r\n            >提交\r\n          </el-button>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"resetUserForm('ruleUserForm')\"\r\n            >重置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <!-- 5.【Dialog 对话框：基本用法】- 关联表（用户-角色） -->\r\n    <el-dialog :title=\"dialogUserRoleTitle\" :visible.sync=\"dialogUserRoleVisible\" width=\"600px\">\r\n      <el-form :model=\"ruleUserRoleForm\">\r\n        <!-- 【Tree 树形控件：树节点的选择】 -->\r\n        <el-tree\r\n          ref=\"tree\"\r\n          :data=\"roleTree\"\r\n          show-checkbox\r\n          default-expand-all\r\n          node-key=\"id\"\r\n          :check-strictly=\"true\"\r\n          :props=\"defaultProps\"\r\n        >\r\n        </el-tree>\r\n      </el-form>\r\n      <span class=\"dialog-footer\">\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"submitUserRoleForm('ruleUserRoleForm')\"\r\n          >确 定</el-button\r\n        >\r\n        <el-button type=\"success\" size=\"mini\" @click=\"resetUserRoleForm\">取 消</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SysUser',\r\n  data() {\r\n    return {\r\n      /* 1.【Form 表单：行内表单】 */\r\n      formInline: {\r\n        name: '',\r\n      },\r\n      deleteSomeStatus: true,\r\n\r\n      /* 2.【Table 表格：多选】 */\r\n      tableUserData: [],\r\n      multipleSelection: [],\r\n\r\n      /* 3.【Pagination 分页：完整功能】 */\r\n      current: 1,\r\n      size: 10,\r\n      total: 0,\r\n\r\n      /* 4.【Dialog 对话框：基本用法】- 表格数据（该行） */\r\n      dialogUserVisible: false,\r\n      dialogUserTitle: '',\r\n      ruleUserForm: {},\r\n      ruleUser: {\r\n        username: [{ required: true, message: '请输入用户昵称', trigger: 'blur' }],\r\n        email: [{ required: true, message: '请输入用户邮箱', trigger: 'blur' }],\r\n        mobile: [{ required: true, message: '请输入用户手机', trigger: 'blur' }],\r\n        status: [{ required: true, message: '请选择用户状态', trigger: 'blur' }],\r\n      },\r\n\r\n      /* 5.【Dialog 对话框：基本用法】- 关联表（用户-角色） */\r\n      dialogUserRoleVisible: false,\r\n      dialogUserRoleTitle: '',\r\n      ruleUserRoleForm: {},\r\n      /* 【Tree 树形控件：树节点的选择】 */\r\n      roleTree: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name',\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.queryAllUser()\r\n    this.queryAllRole()\r\n  },\r\n  methods: {\r\n    /* 1.【Form 表单：行内表单】 */\r\n    querySomeUser() {\r\n      this.$axios\r\n        .get('/sys/user/list', {\r\n          params: {\r\n            name: this.formInline.name,\r\n            current: this.current,\r\n            size: this.size,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.tableUserData = res.data.data.records\r\n          this.size = res.data.data.size\r\n          this.current = res.data.data.current\r\n          this.total = res.data.data.total\r\n        })\r\n    },\r\n    addOneUser() {\r\n      this.ruleUserForm = {\r\n        username: '',\r\n        email: '',\r\n        mobile: '',\r\n        status: '',\r\n      }\r\n      this.dialogUserTitle = '新增一行'\r\n      this.dialogUserVisible = true\r\n    },\r\n    deleteSomeUser() {\r\n      let ids = []\r\n      this.multipleSelection.forEach((row) => {\r\n        ids.push(row.id)\r\n      })\r\n      this.$axios.post('/sys/user/delete', ids).then((res) => {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '操作成功',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            this.queryAllUser()\r\n          },\r\n        })\r\n      })\r\n    },\r\n\r\n    /* 2.【Table 表格：多选】 */\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n      this.deleteSomeStatus = val.length == 0 ? true : false\r\n    },\r\n    queryAllUser() {\r\n      this.$axios.get('/sys/user/list').then((res) => {\r\n        this.tableUserData = res.data.data.records\r\n        this.size = res.data.data.size\r\n        this.current = res.data.data.current\r\n        this.total = res.data.data.total\r\n      })\r\n    },\r\n    updateUserRole(id) {\r\n      this.dialogUserRoleTitle = '关联表（用户-角色）'\r\n      this.dialogUserRoleVisible = true\r\n      this.$axios.get('/sys/user/info/' + id).then((res) => {\r\n        this.ruleUserRoleForm = res.data.data\r\n        this.$refs.tree.setCheckedKeys(res.data.data.roleIds) // 【Tree 树形控件：树节点的选择】\r\n      })\r\n    },\r\n    updatePassUser(id, username) {\r\n      this.$confirm('将重置用户【' + username + '】的密码, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n        .then(() => {\r\n          this.$axios.post('/sys/user/repass', id).then((res) => {\r\n            this.$message({\r\n              showClose: true,\r\n              message: '操作成功',\r\n              type: 'success',\r\n              center: true,\r\n              onClose: () => {},\r\n            })\r\n          })\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消操作',\r\n            center: true,\r\n          })\r\n        })\r\n    },\r\n    updateOneUser(id) {\r\n      this.$axios.get('/sys/user/info/' + id).then((res) => {\r\n        this.ruleUserForm = res.data.data\r\n        this.dialogUserTitle = '编辑该行'\r\n        this.dialogUserVisible = true\r\n      })\r\n    },\r\n    deleteOneUser(id) {\r\n      let ids = []\r\n      ids.push(id)\r\n      this.$axios.post('/sys/user/delete', ids).then((res) => {\r\n        /* 【Message 消息提示：可关闭】 */\r\n        this.$message({\r\n          showClose: true,\r\n          message: '删除成功！',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            /* 关闭时的回调函数, 参数为被关闭的 message 实例 */\r\n            this.queryAllUser()\r\n          },\r\n        })\r\n      })\r\n    },\r\n\r\n    /* 3.【Pagination 分页：完整功能】 */\r\n    handleSizeChange(val) {\r\n      this.size = val\r\n      this.queryAllUser()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.current = val\r\n      this.queryAllUser()\r\n    },\r\n\r\n    /* 4.【Dialog 对话框：基本用法】- 表格数据（该行） */\r\n    submitUserForm(ruleUserForm) {\r\n      this.$refs[ruleUserForm].validate((valid) => {\r\n        if (valid) {\r\n          this.$axios\r\n            .post('/sys/user/' + (this.ruleUserForm.id ? 'update' : 'save'), this.ruleUserForm)\r\n            .then((res) => {\r\n              this.$message({\r\n                showClose: true,\r\n                message: '操作成功！',\r\n                type: 'success',\r\n                center: true,\r\n                onClose: () => {\r\n                  this.queryAllUser()\r\n                },\r\n              })\r\n              this.dialogUserVisible = false\r\n            })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetUserForm(ruleUserForm) {\r\n      this.$refs[ruleUserForm].resetFields()\r\n      this.ruleUserForm = {\r\n        username: '',\r\n        email: '',\r\n        mobile: '',\r\n        status: '',\r\n      }\r\n    },\r\n\r\n    /* 5.【Dialog 对话框：基本用法】- 关联表（用户-角色） */\r\n    submitUserRoleForm(ruleUserRoleForm) {\r\n      let roleIds = this.$refs.tree.getCheckedKeys()\r\n      this.$axios.post('/sys/user/role/' + this.ruleUserRoleForm.id, roleIds).then((res) => {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '操作成功！',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            this.queryAllUser()\r\n          },\r\n        })\r\n        this.dialogUserRoleVisible = false\r\n      })\r\n    },\r\n    resetUserRoleForm() {\r\n      this.dialogUserRoleVisible = false\r\n    },\r\n    queryAllRole() {\r\n      this.$axios.get('/sys/role/list').then((res) => {\r\n        this.roleTree = res.data.data.records\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/sys"}]}