{"remainingRequest":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\sys\\Role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\sys\\Role.vue","mtime":1648607539314},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1620148001577},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1620148009005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Role.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 1.【Form 表单：行内表单】 -->\r\n    <el-form :inline=\"true\" :model=\"formInline\">\r\n      <el-form-item>\r\n        <el-input\r\n          v-model=\"formInline.name\"\r\n          size=\"mini\"\r\n          placeholder=\"请输入名称\"\r\n          clearable\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"success\" size=\"mini\" @click=\"querySomeRole\">搜索</el-button>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"addOneRole\">新增一行</el-button>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-popconfirm title=\"确定批量删除吗？？\" @confirm=\"deleteSomeRole\">\r\n          <el-button slot=\"reference\" type=\"danger\" size=\"mini\" :disabled=\"deleteSomeStatus\"\r\n            >批量删除\r\n          </el-button>\r\n        </el-popconfirm>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 2.【Table 表格：多选】 -->\r\n    <el-table\r\n      ref=\"multipleTable\"\r\n      :data=\"tableRoleData\"\r\n      tooltip-effect=\"dark\"\r\n      border\r\n      stripe\r\n      size=\"small\"\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n\r\n      <el-table-column prop=\"name\" label=\"名称\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"code\" label=\"编码\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"remark\" label=\"描述\" width=\"300\"></el-table-column>\r\n\r\n      <el-table-column prop=\"menu\" label=\"菜单\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-tag v-for=\"(item, index) in scope.row.menus\" :key=\"index\" size=\"small\" type=\"info\"\r\n            >{{ item.title }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\r\n        <template v-slot=\"scope\">\r\n          <el-tag v-if=\"scope.row.status === 0\" size=\"small\" type=\"success\">正常</el-tag>\r\n          <el-tag v-else-if=\"scope.row.status === 1\" size=\"small\" type=\"danger\">禁用</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"success\" size=\"mini\" @click=\"updateRoleMenu(scope.row.id)\"\r\n            >关联表（角色-菜单）\r\n          </el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"updateOneRole(scope.row.id)\"\r\n            >编辑该行\r\n          </el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <span>\r\n            <el-popconfirm title=\"是否删除当前行内容？\" @confirm=\"deleteOneRole(scope.row.id)\">\r\n              <el-button slot=\"reference\" type=\"danger\" size=\"mini\">删除该行</el-button>\r\n            </el-popconfirm>\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 3.【Pagination 分页：完整功能】 -->\r\n    <el-pagination\r\n      style=\"margin-top: 10px\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :page-sizes=\"[10, 20, 50, 100]\"\r\n      :current-page=\"current\"\r\n      :page-size=\"size\"\r\n      :total=\"total\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 4.【Dialog 对话框：基本用法】- 表格数据（该行）-->\r\n    <el-dialog :title=\"dialogRoleTitle\" :visible.sync=\"dialogRoleVisible\" width=\"600px\">\r\n      <el-form ref=\"ruleRoleForm\" :model=\"ruleRoleForm\" :rules=\"ruleRole\" label-width=\"100px\">\r\n        <el-form-item label=\"名称\" prop=\"name\" label-width=\"100px\">\r\n          <el-input v-model=\"ruleRoleForm.name\" placeholder=\"请输入角色名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"编码\" prop=\"code\" label-width=\"100px\">\r\n          <el-input v-model=\"ruleRoleForm.code\" placeholder=\"请输入角色编码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"remark\" label-width=\"100px\">\r\n          <el-input v-model=\"ruleRoleForm.remark\" placeholder=\"请输入角色描述\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"状态\" prop=\"status\" label-width=\"100px\">\r\n          <el-radio-group v-model=\"ruleRoleForm.status\">\r\n            <el-radio :label=\"0\">正常</el-radio>\r\n            <el-radio :label=\"1\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"submitRoleForm('ruleRoleForm')\"\r\n            >提交\r\n          </el-button>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"resetRoleForm('ruleRoleForm')\"\r\n            >重置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <!-- 5.【Dialog 对话框：基本用法】- 关联表（角色-菜单） -->\r\n    <el-dialog :title=\"dialogRoleMenuTitle\" :visible.sync=\"dialogRoleMenuVisible\" width=\"600px\">\r\n      <el-form :model=\"ruleRoleMenuForm\">\r\n        <!-- 【Tree 树形控件：树节点的选择】 -->\r\n        <el-tree\r\n          ref=\"tree\"\r\n          :data=\"menuTree\"\r\n          show-checkbox\r\n          default-expand-all\r\n          node-key=\"id\"\r\n          :check-strictly=\"true\"\r\n          :props=\"defaultProps\"\r\n        >\r\n        </el-tree>\r\n      </el-form>\r\n      <span class=\"dialog-footer\">\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"submitRoleMenuForm('ruleRoleMenuForm')\"\r\n          >确 定</el-button\r\n        >\r\n        <el-button type=\"success\" size=\"mini\" @click=\"resetRoleMenuForm\">取 消</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SysRole',\r\n  data() {\r\n    return {\r\n      /* 1.【Form 表单：行内表单】 */\r\n      formInline: {\r\n        name: '',\r\n      },\r\n      deleteSomeStatus: true,\r\n\r\n      /* 2.【Table 表格：多选】 */\r\n      tableRoleData: [],\r\n      multipleSelection: [],\r\n\r\n      /* 3.【Pagination 分页：完整功能】 */\r\n      current: 1,\r\n      size: 10,\r\n      total: 0,\r\n\r\n      /* 4.【Dialog 对话框：基本用法】- 表格数据（该行） */\r\n      dialogRoleVisible: false,\r\n      dialogRoleTitle: '',\r\n      ruleRoleForm: {},\r\n      ruleRole: {\r\n        name: [{ required: true, message: '请输入名称', trigger: 'blur' }],\r\n        code: [{ required: true, message: '请输入编码', trigger: 'blur' }],\r\n        status: [{ required: true, message: '请选择状态', trigger: 'blur' }],\r\n      },\r\n\r\n      /* 5.【Dialog 对话框：基本用法】- 关联表（角色-菜单） */\r\n      dialogRoleMenuVisible: false,\r\n      dialogRoleMenuTitle: '',\r\n      ruleRoleMenuForm: {},\r\n      /* 【Tree 树形控件：树节点的选择】 */\r\n      menuTree: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title',\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.queryAllRole()\r\n    this.queryAllMenu()\r\n  },\r\n  methods: {\r\n    /* 1.【Form 表单：行内表单】 */\r\n    querySomeRole() {\r\n      this.$axios\r\n        .get('/sys/role/list', {\r\n          params: {\r\n            name: this.formInline.name,\r\n            current: this.current,\r\n            size: this.size,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.tableRoleData = res.data.data.records\r\n          this.size = res.data.data.size\r\n          this.current = res.data.data.current\r\n          this.total = res.data.data.total\r\n        })\r\n    },\r\n    addOneRole() {\r\n      this.ruleRoleForm = {\r\n        name: '',\r\n        code: '',\r\n        remark: '',\r\n        status: '',\r\n      }\r\n      this.dialogRoleTitle = '新增一行'\r\n      this.dialogRoleVisible = true\r\n    },\r\n    deleteSomeRole() {\r\n      let ids = []\r\n      this.multipleSelection.forEach((row) => {\r\n        ids.push(row.id)\r\n      })\r\n      this.$axios.post('/sys/role/delete', ids).then((res) => {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '操作成功',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            this.queryAllRole()\r\n          },\r\n        })\r\n      })\r\n    },\r\n\r\n    /* 2.【Table 表格：多选】 */\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n      this.deleteSomeStatus = val.length == 0 ? true : false\r\n    },\r\n    queryAllRole() {\r\n      this.$axios.get('/sys/role/list').then((res) => {\r\n        this.tableRoleData = res.data.data.records\r\n        this.size = res.data.data.size\r\n        this.current = res.data.data.current\r\n        this.total = res.data.data.total\r\n      })\r\n    },\r\n    updateRoleMenu(id) {\r\n      this.dialogRoleMenuTitle = '关联表（角色-菜单）'\r\n      this.dialogRoleMenuVisible = true\r\n      this.$axios.get('/sys/role/info/' + id).then((res) => {\r\n        this.ruleRoleMenuForm = res.data.data\r\n        /* 【Tree 树形控件：树节点的选择】 */\r\n        this.$refs.tree.setCheckedKeys(res.data.data.menuIds)\r\n      })\r\n    },\r\n    updateOneRole(id) {\r\n      this.$axios.get('/sys/role/info/' + id).then((res) => {\r\n        this.ruleRoleForm = res.data.data\r\n        this.dialogRoleTitle = '编辑该行'\r\n        this.dialogRoleVisible = true\r\n      })\r\n    },\r\n    deleteOneRole(id) {\r\n      let ids = []\r\n      ids.push(id)\r\n      this.$axios.post('/sys/role/delete', ids).then((res) => {\r\n        /* 【Message 消息提示：可关闭】 */\r\n        this.$message({\r\n          showClose: true,\r\n          message: '删除成功！',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            /* 关闭时的回调函数, 参数为被关闭的 message 实例 */\r\n            this.queryAllRole()\r\n          },\r\n        })\r\n      })\r\n    },\r\n\r\n    /* 3.【Pagination 分页：完整功能】 */\r\n    handleSizeChange(val) {\r\n      this.size = val\r\n      this.queryAllRole()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.current = val\r\n      this.queryAllRole()\r\n    },\r\n\r\n    /* 4.【Dialog 对话框：基本用法】- 表格数据（该行） */\r\n    submitRoleForm(ruleRoleForm) {\r\n      this.$refs[ruleRoleForm].validate((valid) => {\r\n        if (valid) {\r\n          this.$axios\r\n            .post('/sys/role/' + (this.ruleRoleForm.id ? 'update' : 'save'), this.ruleRoleForm)\r\n            .then((res) => {\r\n              this.$message({\r\n                showClose: true,\r\n                message: '操作成功！',\r\n                type: 'success',\r\n                center: true,\r\n                onClose: () => {\r\n                  this.queryAllRole()\r\n                },\r\n              })\r\n              this.dialogRoleVisible = false\r\n            })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetRoleForm(ruleRoleForm) {\r\n      this.$refs[ruleRoleForm].resetFields()\r\n      this.ruleRoleForm = {\r\n        name: '',\r\n        code: '',\r\n        remark: '',\r\n        status: '',\r\n      }\r\n    },\r\n\r\n    /* 5.【Dialog 对话框：基本用法】- 关联表（角色-菜单） */\r\n    submitRoleMenuForm(ruleRoleMenuForm) {\r\n      let menuIds = this.$refs.tree.getCheckedKeys()\r\n      this.$axios.post('/sys/role/menu/' + this.ruleRoleMenuForm.id, menuIds).then((res) => {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '操作成功！',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            this.queryAllRole()\r\n          },\r\n        })\r\n        this.dialogRoleMenuVisible = false\r\n      })\r\n    },\r\n    resetRoleMenuForm() {\r\n      this.dialogRoleMenuVisible = false\r\n    },\r\n    queryAllMenu() {\r\n      this.$axios.get('/sys/menu/list').then((res) => {\r\n        this.menuTree = res.data.data\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}