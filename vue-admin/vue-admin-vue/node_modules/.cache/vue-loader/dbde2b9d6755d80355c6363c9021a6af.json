{"remainingRequest":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\sys\\Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\sys\\Menu.vue","mtime":1648607539314},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1620148001577},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1620148009005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdTeXNNZW51JywNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgLyogMS7jgJBGb3JtIOihqOWNle+8muihjOWGheihqOWNleOAkSAqLw0KDQogICAgICAvKiAyLuOAkFRhYmxlIOihqOagvO+8muagkeW9ouaVsOaNruS4juaHkuWKoOi9veOAkSAqLw0KICAgICAgdGFibGVNZW51RGF0YTogW10sDQoNCiAgICAgIC8qIDMu44CQRGlhbG9nIOWvueivneahhu+8muWfuuacrOeUqOazleOAkS0g6KGo5qC85pWw5o2u77yI6K+l6KGM77yJICovDQogICAgICBkaWFsb2dNZW51VmlzaWJsZTogZmFsc2UsDQogICAgICBkaWFsb2dNZW51VGl0bGU6ICcnLA0KICAgICAgcnVsZU1lbnVGb3JtOiB7fSwNCiAgICAgIHJ1bGVNZW51OiB7DQogICAgICAgIHBhcmVudElkOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeS4iue6pycsIHRyaWdnZXI6ICdibHVyJyB9XSwNCiAgICAgICAgbmFtZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXlkI3np7AnLCB0cmlnZ2VyOiAnYmx1cicgfV0sDQogICAgICAgIHBlcm1zOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeadg+mZkCcsIHRyaWdnZXI6ICdibHVyJyB9XSwNCiAgICAgICAgc29ydGVkOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeaOkuWIlycsIHRyaWdnZXI6ICdibHVyJyB9XSwNCiAgICAgICAgdHlwZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6nnsbvlnosnLCB0cmlnZ2VyOiAnYmx1cicgfV0sDQogICAgICAgIHN0YXR1czogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6nnirbmgIEnLCB0cmlnZ2VyOiAnYmx1cicgfV0sDQogICAgICB9LA0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLnF1ZXJ5QWxsTWVudSgpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvKiAxLuOAkEZvcm0g6KGo5Y2V77ya6KGM5YaF6KGo5Y2V44CRICovDQogICAgYWRkT25lTWVudSgpIHsNCiAgICAgIHRoaXMucnVsZU1lbnVGb3JtID0gew0KICAgICAgICBwYXJlbnRJZDogJycsDQogICAgICAgIG5hbWU6ICcnLA0KICAgICAgICB0aXRsZTogJycsDQogICAgICAgIHBhdGg6ICcnLA0KICAgICAgICBpY29uOiAnJywNCiAgICAgICAgcGVybXM6ICcnLA0KICAgICAgICBjb21wb25lbnQ6ICcnLA0KICAgICAgICBzb3J0ZWQ6ICcnLA0KICAgICAgICB0eXBlOiAnJywNCiAgICAgICAgc3RhdHVzOiAnJywNCiAgICAgIH0NCiAgICAgIHRoaXMuZGlhbG9nTWVudVRpdGxlID0gJ+aWsOWinuS4gOihjCcNCiAgICAgIHRoaXMuZGlhbG9nTWVudVZpc2libGUgPSB0cnVlDQogICAgfSwNCg0KICAgIC8qIDIu44CQVGFibGUg6KGo5qC877ya5qCR5b2i5pWw5o2u5LiO5oeS5Yqg6L2944CRICovDQogICAgcXVlcnlBbGxNZW51KCkgew0KICAgICAgdGhpcy4kYXhpb3MuZ2V0KCcvc3lzL21lbnUvbGlzdCcpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICB0aGlzLnRhYmxlTWVudURhdGEgPSByZXMuZGF0YS5kYXRhDQogICAgICB9KQ0KICAgIH0sDQogICAgdXBkYXRlT25lTWVudShpZCkgew0KICAgICAgdGhpcy4kYXhpb3MuZ2V0KCcvc3lzL21lbnUvaW5mby8nICsgaWQpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICB0aGlzLnJ1bGVNZW51Rm9ybSA9IHJlcy5kYXRhLmRhdGENCiAgICAgICAgdGhpcy5kaWFsb2dNZW51VGl0bGUgPSAn57yW6L6R6K+l6KGMJw0KICAgICAgICB0aGlzLmRpYWxvZ01lbnVWaXNpYmxlID0gdHJ1ZQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGRlbGV0ZU9uZU1lbnUoaWQpIHsNCiAgICAgIGxldCBpZHMgPSBbXQ0KICAgICAgaWRzLnB1c2goaWQpDQogICAgICB0aGlzLiRheGlvcy5wb3N0KCcvc3lzL21lbnUvZGVsZXRlLycgKyBpZHMpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAvKiDjgJBNZXNzYWdlIOa2iOaBr+aPkOekuu+8muWPr+WFs+mXreOAkSAqLw0KICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsDQogICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKn++8gScsDQogICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLA0KICAgICAgICAgIGNlbnRlcjogdHJ1ZSwNCiAgICAgICAgICBvbkNsb3NlOiAoKSA9PiB7DQogICAgICAgICAgICAvKiDlhbPpl63ml7bnmoTlm57osIPlh73mlbAsIOWPguaVsOS4uuiiq+WFs+mXreeahCBtZXNzYWdlIOWunuS+iyAqLw0KICAgICAgICAgICAgdGhpcy5xdWVyeUFsbE1lbnUoKQ0KICAgICAgICAgIH0sDQogICAgICAgIH0pDQogICAgICB9KQ0KICAgIH0sDQoNCiAgICAvKiAzLuOAkERpYWxvZyDlr7nor53moYbvvJrln7rmnKznlKjms5XjgJEtIOihqOagvOaVsOaNru+8iOivpeihjO+8iSAqLw0KICAgIHN1Ym1pdE1lbnVGb3JtKHJ1bGVNZW51Rm9ybSkgew0KICAgICAgdGhpcy4kcmVmc1tydWxlTWVudUZvcm1dLnZhbGlkYXRlKCh2YWxpZCkgPT4gew0KICAgICAgICBpZiAodmFsaWQpIHsNCiAgICAgICAgICAvKiDmlrnms5XlhbHnlKjvvJrpgJrov4fliKTmlq3jgJB0aGlzLnJ1bGVNZW51Rm9ybS5pZOOAkeaYr+WQpuWtmOWcqO+8jOWMuuWIhiB1cGRhdGUg6L+Y5pivIHNhdmUg6K+35rGCICovDQogICAgICAgICAgdGhpcy4kYXhpb3MNCiAgICAgICAgICAgIC5wb3N0KCcvc3lzL21lbnUvJyArICh0aGlzLnJ1bGVNZW51Rm9ybS5pZCA/ICd1cGRhdGUnIDogJ3NhdmUnKSwgdGhpcy5ydWxlTWVudUZvcm0pDQogICAgICAgICAgICAudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgICAgIC8qIOOAkE1lc3NhZ2Ug5raI5oGv5o+Q56S677ya5Y+v5YWz6Zet44CRICovDQogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5pON5L2c5oiQ5Yqf77yBJywNCiAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsDQogICAgICAgICAgICAgICAgY2VudGVyOiB0cnVlLA0KICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgIC8qIOWFs+mXreaXtueahOWbnuiwg+WHveaVsCwg5Y+C5pWw5Li66KKr5YWz6Zet55qEIG1lc3NhZ2Ug5a6e5L6LICovDQogICAgICAgICAgICAgICAgICB0aGlzLnF1ZXJ5QWxsTWVudSgpDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgdGhpcy5kaWFsb2dNZW51VmlzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICB9KQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpDQogICAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICByZXNldE1lbnVGb3JtKHJ1bGVNZW51Rm9ybSkgew0KICAgICAgdGhpcy4kcmVmc1tydWxlTWVudUZvcm1dLnJlc2V0RmllbGRzKCkNCiAgICAgIHRoaXMucnVsZU1lbnVGb3JtID0gew0KICAgICAgICBwYXJlbnRJZDogJycsDQogICAgICAgIG5hbWU6ICcnLA0KICAgICAgICB0aXRsZTogJycsDQogICAgICAgIHBhdGg6ICcnLA0KICAgICAgICBpY29uOiAnJywNCiAgICAgICAgcGVybXM6ICcnLA0KICAgICAgICBjb21wb25lbnQ6ICcnLA0KICAgICAgICBzb3J0ZWQ6ICcnLA0KICAgICAgICB0eXBlOiAnJywNCiAgICAgICAgc3RhdHVzOiAnJywNCiAgICAgIH0NCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Menu.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 1.【Form 表单：行内表单】 -->\r\n    <el-form :inline=\"true\">\r\n      <el-form-item>\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"addOneMenu\">新增一行</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 2.【Table 表格：树形数据与懒加载】 -->\r\n    <el-table :data=\"tableMenuData\" row-key=\"id\" border stripe size=\"small\" default-expand-all>\r\n      <el-table-column prop=\"title\" label=\"标题\" sortable width=\"180px\"></el-table-column>\r\n      <el-table-column prop=\"path\" label=\"路径\" width=\"120px\"></el-table-column>\r\n      <el-table-column prop=\"icon\" label=\"图标\" width=\"160px\"></el-table-column>\r\n      <el-table-column prop=\"perms\" label=\"权限\" width=\"160px\"></el-table-column>\r\n      <el-table-column prop=\"component\" label=\"组件\" width=\"100px\"></el-table-column>\r\n\r\n      <el-table-column prop=\"sorted\" label=\"排列\" width=\"70px\"></el-table-column>\r\n      <el-table-column prop=\"type\" label=\"类型\" width=\"85px\">\r\n        <!-- 【Table 表格：插槽slot】 -->\r\n        <template v-slot=\"scope\">\r\n          <!-- 【Tag 标签】 -->\r\n          <el-tag v-if=\"scope.row.type === 0\" size=\"small\">目录</el-tag>\r\n          <el-tag v-else-if=\"scope.row.type === 1\" size=\"small\" type=\"success\">菜单</el-tag>\r\n          <el-tag v-else-if=\"scope.row.type === 2\" size=\"small\" type=\"info\">按钮</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"85px\">\r\n        <!-- 【Table 表格：插槽slot】 -->\r\n        <template v-slot=\"scope\">\r\n          <!-- 【Tag 标签】 -->\r\n          <el-tag v-if=\"scope.row.status === 0\" size=\"small\" type=\"success\">正常</el-tag>\r\n          <el-tag v-else-if=\"scope.row.status === 1\" size=\"small\" type=\"danger\">禁用</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <!-- 【Table 表格：插槽slot】 -->\r\n        <template v-slot=\"scope\">\r\n          <!-- 【Button 按钮：基础用法】 -->\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"updateOneMenu(scope.row.id)\"\r\n            >编辑该行\r\n          </el-button>\r\n          <!-- 【Divider 分割线：垂直分割】-->\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <!-- 【Popconfirm 气泡确认框：基础用法】 -->\r\n          <el-popconfirm title=\"是否删除当前行内容？\" @confirm=\"deleteOneMenu(scope.row.id)\">\r\n            <el-button slot=\"reference\" type=\"danger\" size=\"mini\">删除该行</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 3.【Dialog 对话框：基本用法】- 表格数据（该行） -->\r\n    <el-dialog :title=\"dialogMenuTitle\" :visible.sync=\"dialogMenuVisible\" width=\"600px\">\r\n      <!-- 【Form 表单：表单验证】 -->\r\n      <el-form ref=\"ruleMenuForm\" :model=\"ruleMenuForm\" :rules=\"ruleMenu\" label-width=\"100px\">\r\n        <el-form-item label=\"上级\" prop=\"parentId\">\r\n          <!-- Select 选择器：基础用法 -->\r\n          <el-select v-model=\"ruleMenuForm.parentId\" placeholder=\"请选择上级菜单\">\r\n            <template v-for=\"item in tableMenuData\">\r\n              <el-option :label=\"item.title\" :key=\"item.id\" :value=\"item.id\"></el-option>\r\n              <template v-for=\"child in item.children\">\r\n                <el-option :label=\"child.title\" :key=\"child.id\" :value=\"child.id\">\r\n                  <span>{{ '- ' + child.title }}</span>\r\n                </el-option>\r\n              </template>\r\n            </template>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"标题\" prop=\"name\" label-width=\"100px\">\r\n          <!-- 【Input 输入框：基础用法】 -->\r\n          <el-input v-model=\"ruleMenuForm.title\" placeholder=\"请输入菜单标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"路径\" prop=\"path\" label-width=\"100px\">\r\n          <!-- 【Input 输入框：基础用法】 -->\r\n          <el-input v-model=\"ruleMenuForm.path\" placeholder=\"请输入菜单路径\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"图标\" prop=\"icon\" label-width=\"100px\">\r\n          <!-- 【Input 输入框：基础用法】 -->\r\n          <el-input v-model=\"ruleMenuForm.icon\" placeholder=\"请输入菜单图标\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"权限\" prop=\"perms\" label-width=\"100px\">\r\n          <!-- 【Input 输入框：基础用法】 -->\r\n          <el-input v-model=\"ruleMenuForm.perms\" placeholder=\"请输入菜单权限\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"组件\" prop=\"component\" label-width=\"100px\">\r\n          <!-- 【Input 输入框：基础用法】 -->\r\n          <el-input v-model=\"ruleMenuForm.component\" placeholder=\"请输入菜单组件\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"排列\" prop=\"sorted\" label-width=\"100px\">\r\n          <!-- 【InputNumber 计数器：基础用法】 -->\r\n          <el-input-number v-model=\"ruleMenuForm.sorted\" :min=\"1\" label=\"排序号\">1</el-input-number>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"类型\" prop=\"type\" label-width=\"100px\">\r\n          <!-- 【Radio 单选框：单选框组】 -->\r\n          <el-radio-group v-model=\"ruleMenuForm.type\" size=\"small\">\r\n            <el-radio :label=\"0\">目录</el-radio>\r\n            <el-radio :label=\"1\">菜单</el-radio>\r\n            <el-radio :label=\"2\">按钮</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\" label-width=\"100px\">\r\n          <!-- 【Radio 单选框：单选框组】 -->\r\n          <el-radio-group v-model=\"ruleMenuForm.status\" size=\"small\">\r\n            <el-radio :label=\"0\">正常</el-radio>\r\n            <el-radio :label=\"1\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <!-- 【Button 按钮：基础用法】 -->\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"submitMenuForm('ruleMenuForm')\"\r\n            >提交\r\n          </el-button>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"resetMenuForm('ruleMenuForm')\"\r\n            >重置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SysMenu',\r\n  data() {\r\n    return {\r\n      /* 1.【Form 表单：行内表单】 */\r\n\r\n      /* 2.【Table 表格：树形数据与懒加载】 */\r\n      tableMenuData: [],\r\n\r\n      /* 3.【Dialog 对话框：基本用法】- 表格数据（该行） */\r\n      dialogMenuVisible: false,\r\n      dialogMenuTitle: '',\r\n      ruleMenuForm: {},\r\n      ruleMenu: {\r\n        parentId: [{ required: true, message: '请选择上级', trigger: 'blur' }],\r\n        name: [{ required: true, message: '请输入名称', trigger: 'blur' }],\r\n        perms: [{ required: true, message: '请输入权限', trigger: 'blur' }],\r\n        sorted: [{ required: true, message: '请选择排列', trigger: 'blur' }],\r\n        type: [{ required: true, message: '请选择类型', trigger: 'blur' }],\r\n        status: [{ required: true, message: '请选择状态', trigger: 'blur' }],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.queryAllMenu()\r\n  },\r\n  methods: {\r\n    /* 1.【Form 表单：行内表单】 */\r\n    addOneMenu() {\r\n      this.ruleMenuForm = {\r\n        parentId: '',\r\n        name: '',\r\n        title: '',\r\n        path: '',\r\n        icon: '',\r\n        perms: '',\r\n        component: '',\r\n        sorted: '',\r\n        type: '',\r\n        status: '',\r\n      }\r\n      this.dialogMenuTitle = '新增一行'\r\n      this.dialogMenuVisible = true\r\n    },\r\n\r\n    /* 2.【Table 表格：树形数据与懒加载】 */\r\n    queryAllMenu() {\r\n      this.$axios.get('/sys/menu/list').then((res) => {\r\n        this.tableMenuData = res.data.data\r\n      })\r\n    },\r\n    updateOneMenu(id) {\r\n      this.$axios.get('/sys/menu/info/' + id).then((res) => {\r\n        this.ruleMenuForm = res.data.data\r\n        this.dialogMenuTitle = '编辑该行'\r\n        this.dialogMenuVisible = true\r\n      })\r\n    },\r\n    deleteOneMenu(id) {\r\n      let ids = []\r\n      ids.push(id)\r\n      this.$axios.post('/sys/menu/delete/' + ids).then((res) => {\r\n        /* 【Message 消息提示：可关闭】 */\r\n        this.$message({\r\n          showClose: true,\r\n          message: '删除成功！',\r\n          type: 'success',\r\n          center: true,\r\n          onClose: () => {\r\n            /* 关闭时的回调函数, 参数为被关闭的 message 实例 */\r\n            this.queryAllMenu()\r\n          },\r\n        })\r\n      })\r\n    },\r\n\r\n    /* 3.【Dialog 对话框：基本用法】- 表格数据（该行） */\r\n    submitMenuForm(ruleMenuForm) {\r\n      this.$refs[ruleMenuForm].validate((valid) => {\r\n        if (valid) {\r\n          /* 方法共用：通过判断【this.ruleMenuForm.id】是否存在，区分 update 还是 save 请求 */\r\n          this.$axios\r\n            .post('/sys/menu/' + (this.ruleMenuForm.id ? 'update' : 'save'), this.ruleMenuForm)\r\n            .then((res) => {\r\n              /* 【Message 消息提示：可关闭】 */\r\n              this.$message({\r\n                showClose: true,\r\n                message: '操作成功！',\r\n                type: 'success',\r\n                center: true,\r\n                onClose: () => {\r\n                  /* 关闭时的回调函数, 参数为被关闭的 message 实例 */\r\n                  this.queryAllMenu()\r\n                },\r\n              })\r\n              this.dialogMenuVisible = false\r\n            })\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetMenuForm(ruleMenuForm) {\r\n      this.$refs[ruleMenuForm].resetFields()\r\n      this.ruleMenuForm = {\r\n        parentId: '',\r\n        name: '',\r\n        title: '',\r\n        path: '',\r\n        icon: '',\r\n        perms: '',\r\n        component: '',\r\n        sorted: '',\r\n        type: '',\r\n        status: '',\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}