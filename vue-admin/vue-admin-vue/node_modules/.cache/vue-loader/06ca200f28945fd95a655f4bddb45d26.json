{"remainingRequest":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\user\\Center.vue?vue&type=style&index=0&id=6ae8fe8f&scoped=true&lang=css&","dependencies":[{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\src\\views\\user\\Center.vue","mtime":1648607539315},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1620148008503},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1620148009005},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1620148008959},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620148001861},{"path":"D:\\software_ware\\workspace_idea\\grower\\vue-admin\\vue-admin-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1620148009005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtZm9ybSB7DQogIHdpZHRoOiA0MjBweDsNCiAgbWFyZ2luOiA1MHB4IGF1dG87DQp9DQo="},{"version":3,"sources":["Center.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA","file":"Center.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <div style=\"text-align: center\">\r\n    <h2>你好！{{ userInfo.username }} 同学</h2>\r\n\r\n    <el-form :model=\"passForm\" status-icon :rules=\"rules\" ref=\"passForm\" label-width=\"100px\">\r\n      <el-form-item label=\"旧密码\" prop=\"currentPass\">\r\n        <el-input type=\"password\" v-model=\"passForm.currentPass\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"passForm.password\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n        <el-input type=\"password\" v-model=\"passForm.checkPass\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('passForm')\">提交</el-button>\r\n        <el-button @click=\"resetForm('passForm')\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.passForm.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      passForm: {\r\n        password: '123456',\r\n        checkPass: '123456',\r\n        currentPass: '123456',\r\n      },\r\n      rules: {\r\n        password: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n          { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' },\r\n        ],\r\n        checkPass: [{ required: true, validator: validatePass, trigger: 'blur' }],\r\n        currentPass: [{ required: true, message: '请输入当前密码', trigger: 'blur' }],\r\n      },\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    userInfo: {\r\n      get() {\r\n        return this.$store.state.userInfo\r\n      },\r\n      set(val) {\r\n        this.$store.state.userInfo = val\r\n      },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          const _this = this\r\n          this.$axios.post('/sys/user/updatePass', this.passForm).then((res) => {\r\n            _this.$alert(res.data.msg, '提示', {\r\n              confirmButtonText: '确定',\r\n              callback: (action) => {\r\n                this.$refs[formName].resetFields()\r\n              },\r\n            })\r\n          })\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form {\r\n  width: 420px;\r\n  margin: 50px auto;\r\n}\r\n</style>\r\n"]}]}